{
  "fileTypes": ["v"],
  "name": "Coq",
  "patterns": [
    { "include": "#proof" }
  ],
  "repository": {
    "proof": {
      "begin": "(?=\\b(Theorem|Lemma|Remark|Fact|Corollary|Property|Proposition))",
      "end": "(?<=\\b(Qed|Defined|Save|Abort(?:\\s+All)?|Admitted)\\.)",
      "name": "meta.proof.coq",
      "patterns": [
        { "include": "#proof-name" },
        { "include": "#proof-body" },
        { "include": "#proof-keywords" }
      ]
    },
    "proof-name": {
      "begin": "(?<=\\b(Theorem|Lemma|Remark|Fact|Corollary|Property|Proposition))",
      "end": "(?=\\:)",
      "name": "entity.name.function.theorem.coq"
    },
    "proof-body": {
      "begin": "(?=\\b(Proof(?:\\s+(Mode|using|with))?)\\.)",
      "end": "(?<=\\b(Qed|Defined|Save|Abort(?:\\s+All)?|Admitted)\\.)",
      "name": "meta.proof.body.coq",
      "patterns": [
        { "include": "#proof-keywords" },
        { "include": "#ltac-builtins" }
      ]
    },
    "proof-keywords" : {
      "match": "\\b(Theorem|Lemma|Remark|Fact|Corollary|Property|Proposition|(Proof(\\s+(Mode|using|with))?|Qed|Defined|Save|Abort(\\s+All)?|Undo(\\s+To)?|Restart|Focus|Unfocus|Unfocused|Unshelve))",
      "name": "keyword.source.coq"
    },
    "ltac-builtins" : {
      "match": "\\b(intro|intros|revert|induction|destruct|auto|eauto|tauto|eassumption|apply|eapply|assumption|constructor|econstructor|reflexivity|inversion|injection|assert|split|esplit|omega|fold|unfold|specialize|rewrite|erewrite|change|symmetry|refine|simpl|intuition|firstorder|generalize|idtac|exist|exists|eexists|elim|eelim|rename|subst|congruence|trivial|left|right|set|pose|discriminate|clear|clearbody|contradict|contradiction|exact|dependent|remember|case|easy|unshelve|pattern|transitivity|etransitivity|f_equal|exfalso|replace|abstract|cycle|swap|revgoals|shelve|unshelve|typeclasses\\s+eauto)\\b",
      "name": "support.function.builtin.ltac"
    }
  },
  "scopeName": "source.coq",
  "uuid": "CDE1AD3A-C094-457D-B321-93009C6BCFDA"
}
